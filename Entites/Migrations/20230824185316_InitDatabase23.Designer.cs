// <auto-generated />
using System;
using Entites;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entites.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230824185316_InitDatabase23")]
    partial class InitDatabase23
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entites.FAQs", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("FAQs", (string)null);
                });

            modelBuilder.Entity("Entites.Images", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tourismPlaceId")
                        .HasColumnType("int");

                    b.Property<int>("tredndingEventsId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tourismPlaceId");

                    b.HasIndex("tredndingEventsId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Entites.TourismPlaces", b =>
                {
                    b.Property<int>("tourismPlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tourismPlaceId"));

                    b.Property<string>("CitizenPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tourismTimings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tourismPlaceId");

                    b.ToTable("TourismPlaces", (string)null);
                });

            modelBuilder.Entity("Entites.TrendingEvents", b =>
                {
                    b.Property<int>("eventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventId"));

                    b.Property<string>("eventCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("eventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("eventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventId");

                    b.ToTable("TrendingEvents", (string)null);
                });

            modelBuilder.Entity("Entites.Images", b =>
                {
                    b.HasOne("Entites.TourismPlaces", "tourism")
                        .WithMany("images")
                        .HasForeignKey("tourismPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entites.TrendingEvents", "trending")
                        .WithMany("Images")
                        .HasForeignKey("tredndingEventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tourism");

                    b.Navigation("trending");
                });

            modelBuilder.Entity("Entites.TourismPlaces", b =>
                {
                    b.Navigation("images");
                });

            modelBuilder.Entity("Entites.TrendingEvents", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
